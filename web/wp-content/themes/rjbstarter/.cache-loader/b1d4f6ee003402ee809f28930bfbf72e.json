{"remainingRequest":"/app/web/wp-content/themes/quantcast/node_modules/buble-loader/index.js??ref--2-1!/app/web/wp-content/themes/quantcast/node_modules/eslint-loader/index.js!/app/web/wp-content/themes/quantcast/node_modules/import-glob/index.js!/app/web/wp-content/themes/quantcast/resources/assets/scripts/routes/careers.js","dependencies":[{"path":"/app/web/wp-content/themes/quantcast/resources/assets/scripts/routes/careers.js","mtime":1602387345000},{"path":"/app/web/wp-content/themes/quantcast/node_modules/cache-loader/dist/cjs.js","mtime":1604016445000},{"path":"/app/web/wp-content/themes/quantcast/node_modules/buble-loader/index.js","mtime":1604016443000},{"path":"/app/web/wp-content/themes/quantcast/node_modules/eslint-loader/index.js","mtime":1604016452000},{"path":"/app/web/wp-content/themes/quantcast/node_modules/import-glob/index.js","mtime":1604016458000}],"contextDependencies":[],"result":["/**\n * Job listing specific js.  This js relies on the lever api routes proxied to\n * quantcast.com routes such as https://www.quantcast.com/careers/lever/proxy/filter\n * via haproxy https://github.corp.qc/qc/haproxy-docker/blob/5ab9f6519299cac19028d6d87089fdfbf9ee3b5b/qc/haproxy15/etc/haproxy.cfg\n */\nexport default {\n  init: function init() {\n\n    var qc = {};\n    qc.behavior = {};\n    qc.helper = {};\n\n    /**\n     * ---\n     *\n     * helper_jobs.js\n     *\n     * Notes:\n     * Helper functions shared between job javascripts [filter_jobs.js, single_job.js]\n     */\n\n    /*\n     * Generates onclick '_qevents' js\n     * Used in job anchor link clicks\n     */\n    qc.helper.onclick_job = function(job_title, is_applying) {\n\n      window._qevents = window._qevents || []; // object might be ad-blocked.\n\n      return '_qevents.push({qacct:\"p-9fYuixa7g_Hm2\",labels:\"' +\n        qc.helper.parse_job_title( job_title, is_applying ) +\n        '\", event:\"click\"})';\n    }\n\n    /*\n     * Parses the job title to an acceptable label format\n     * e.g., Modeling Scientist, Performance Targeting --> Performance_Targeting.Modeling_Scientist\n     */\n    qc.helper.parse_job_title = function(job, is_applying) {\n\n      var raw_pos = job.substring( 0, job.indexOf( ',' ) ).trim();\n      var raw_team = job.substring( job.indexOf( ',' ) + 1 ).trim();\n      var pos = raw_pos.replace( ' ', '_' );\n      var team = raw_team.replace( ' ', '_' );\n\n      if (team.length == 0) {\n        team = 'NO_TEAM';\n      }\n\n      var description = team + '.' + pos;\n\n      if (is_applying) {\n        description = 'Career.APPLY.' + description;\n      } else {\n        description = 'Career.VIEW.' + description;\n      }\n\n      return description;\n    }\n\n    //////\n    // Careers Job Listing Page Filters.\n    // - Having these filters present kicks off the entire build of the career job listings.\n    //////\n    if ( $( '[data-behavior=\"filter_jobs\"]' ).length ) {\n\n      var $this = $( '[data-behavior=\"filter_jobs\"]' );\n      var SIDEBAR_FILTERS = ['department', 'location', 'commitment']; // ordered sidebar listing\n      var LIMIT = 30; // number of jobs per page\n\n      var $filters = $( '.filter-listing__sidebar', $this ),\n      $container = $( '.filter-listing__list', $this ),\n      $load_more = $( '.filter-listing__load-more', $this ),\n      form_data = {\n        page: 1,\n      },\n      $no_results = $( '.filter-listing__error.no-results', $this ),\n      $loading_error = $( '.job-loading-error', $this ),\n      $current_openings = $( 'a[name=\"current_openings\"]' ),\n      $jobCache = $( '#jobCache', $this );\n      //$accordion_inner = $( '.accordion__inner', $this ),\n\n      var jobs = [],\n      max_num_pages = 0,\n      jContent = {};\n\n      /*\n      * Entry point\n      * if jobCache is blank, first-time visit, so load initial\n      * otherwise visitor has returned from the back button, so regenerate state from jobCache\n      */\n      if ($jobCache.val() === '') {\n        init_jobs();\n      } else {\n        jContent = JSON.parse( $jobCache.val() );\n        jobs = jContent.jobs;\n\n        build_sidebar( jobs );\n\n        // set checked sidebar elements.\n        $( jContent.checked_sidebar ).each(\n          function(i, e) {\n            $( '[id=\"' + e + '\"]' ).prop( 'checked', true );\n          }\n        );\n\n        // overwrite with cached job data.\n        form_data = {\n          page: jContent.page || 1,\n          filters: set_filters(),\n        };\n\n        get_posts( form_data, false );\n\n        jContent.load_more ? $load_more.addClass( 'hidden' ) : $load_more.removeClass( 'hidden' );\n\n        $( 'html,body' ).scrollTop( jContent.scrollTop );\n\n        init_listeners();\n      }\n    }\n\n    // initial Lever API job request.\n    function init_jobs() {\n      // careers/lever/proxy is haproxy'd, passes request to api.lever.co [WEBCORE-847].\n      $.ajax({\n        type: 'GET',\n        url: 'https://www.quantcast.com/careers/lever/proxy/filter',\n        dataType: 'json',\n        success: function(data) {\n\n          jobs = data;\n\n          build_sidebar( jobs );\n\n          var hash = hash_to_checkbox();\n\n          var form_data = {\n            filters: set_filters(),\n            page: 1,\n          };\n\n          get_posts( form_data, false );\n\n          init_listeners();\n\n          // jump to position of loaded jobs.\n          if (hash) {\n            $( 'html, body' ).animate(\n              {\n                scrollTop: $current_openings.offset().top,\n              }\n            );\n          }\n        },\n        error: function() {\n          load_off();\n          $load_more.addClass( 'hidden' );\n          $loading_error.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n        },\n      });\n    }\n\n    // initialize click handlers.\n    function init_listeners() {\n\n      // job listing click: save job data and scroll position.\n      $( document ).on(\n        'click', '.filter-listing__item, .filter-listing__item-inner', function() {\n          update_jobCache( form_data.page );\n        }\n      );\n\n      // 'load more' jobs button click.\n      $load_more.on(\n        'click', function(e) {\n\n          form_data.filters = set_filters();\n          form_data.page++;\n\n          $load_more.addClass( 'btn--loading' );\n\n          get_posts( form_data, true );\n\n          e.preventDefault();\n\n        }\n      );\n\n      // on hash change url (e.g. back button, checkbox click).\n      $( window ).on(\n        'hashchange', function() {\n\n          var hash = hash_to_checkbox(),\n          form_data = {\n            filters: set_filters(),\n            page: 1,\n          };\n\n          get_posts( form_data, false );\n\n          if (hash) {\n            $( 'html, body' )\n            .animate(\n              {\n                scrollTop: $current_openings.offset().top,\n              }\n            );\n          }\n\n        }\n      );\n\n      // sidebar click.\n      $( ':input', $filters ).on(\n        'change', function(e) {\n\n          var $input = $( this ),\n          $team_all = $( 'ul.team .check-all' );\n\n          // On 'Department' checkbox click, make sure to reset 'Team' checkboxes.\n          if ($input.attr( 'name' ) === 'department') {\n            $( $team_all, $( ':checked' ).parent() ).prop( 'checked', true );\n          }\n\n          // update hash w/ filters: 'department=filter1__team=filter2__...' pattern.\n          var checked_filters = $( ':checked' ).map(\n            function(i, e) {\n              return e.getAttribute( 'name' ) + '=' + e.getAttribute( 'value' );\n            }\n          );\n\n          // triggers get_posts() via hashchange listener.\n          window.location.hash = encodeURIComponent( $.makeArray( checked_filters ).join( '__' ) );\n\n          e.preventDefault();\n        }\n      );\n\n    }\n\n    /*\n     * Get (filtered) job posts from internal list ('var jobs'), and append (or not) to DOM accordingly\n     * If appending: clicked 'load-more' button, get jobs from defined filter, page by page\n     * Otherwise: clicked sidebar click, fresh page visit -> it's a new result set, and page is 1\n     * Lastly, generating from back button (cache) -> generates a range (page 1 to page n)\n     */\n\n    function get_posts(filter_data, append) {\n\n      // filter by selected sidebar filters.\n      var filtered_jobs = filter_jobs( jobs, filter_data );\n\n      // sort by most recent date.\n      filtered_jobs = filtered_jobs.sort(\n        function(a, b) {\n          return b.createdAt - a.createdAt;\n        }\n      );\n\n      var html = '';\n\n      if (append) {\n        html = build_job_list_html( filtered_jobs, filter_data );\n      } else {\n        for (var i = 1; i <= filter_data.page; i++) {\n          html += build_job_list_html(\n            filtered_jobs, {\n              page: i,\n            }\n          );\n        }\n      }\n\n      update_view( html, filter_data.page, append, filtered_jobs.length );\n\n      update_jobCache( filter_data.page );\n\n      load_off();\n    }\n\n    // Get a page of job results (e.g. 10 jobs a page, and page = 2 -> returns jobs 20-30 in 'all jobs' list).\n    function build_job_list_html(data, filter_data) {\n\n      // paginate counted (num && position in jobs array)\n      var html = '';\n      var page = filter_data.page;\n\n      for (var i = 0; i < LIMIT && (LIMIT * (page - 1) + i) < data.length; i++) {\n        html += job_list_tmpl( data[LIMIT * (page - 1) + i], i );\n      }\n      return html;\n    }\n\n    /*\n     * Filters all jobs according to filtered checkbox criteria\n     * for every job, for each filter group...\n     * if the selected filter neither matches that job's categorization, nor 'ALL' is not checked for that category ->\n     * do not add this job to the filtered list\n     */\n\n    function filter_jobs(data, filter_data) {\n      var filtered_jobs = [];\n\n      for (var i = 0; i < data.length; i++) {\n\n        var add = true;\n        for (var key in filter_data.filters) {\n          if ( ! ((filter_data.filters[key][0] === data[i].categories[key]) ||\n              (filter_data.filters[key][0] === ''))) {\n            add = false;\n          }\n        }\n\n        if (add) {\n          filtered_jobs.push( data[i] );\n        }\n      }\n\n      return filtered_jobs;\n    }\n\n    // appends filtered content to DOM, calculates pagination and toggles buttons accordingly.\n    function update_view(html, page, append, num_jobs) {\n\n      max_num_pages = Math.ceil( num_jobs / LIMIT );\n\n      if (html) {\n        $load_more.removeClass( 'hidden' );\n        $no_results.addClass( 'hidden' );\n\n        if (append === true) {\n          $container.append( html );\n        } else {\n          $container.html( html );\n        }\n\n      } else {\n        $load_more.addClass( 'hidden' );\n        $container.empty();\n        $no_results.removeClass( 'hidden' );\n      }\n\n      if (page < max_num_pages) {\n        $load_more.removeClass( 'hidden' );\n      } else {\n        $load_more.addClass( 'hidden' );\n      }\n\n      // show selected teams, hide the rest.\n      var $selected_team = $( '[name=\"department\"]:checked' ).siblings( '.team' );\n\n      $( '.team' ).not( $selected_team ).hide( 'fast' );\n\n      if ( ! $( 'input', $selected_team ).is( ':checked' )) {\n        $( '.check-all', $selected_team ).prop( 'checked', true );\n      }\n\n      $selected_team.show( 'fast' );\n    }\n\n    /*\n     * appends filtered job 'state' to #jobCache hidden input field to return to same\n     * state when clicking back button\n     */\n    function update_jobCache(page) {\n\n      // save only needed fields to DOM for filtering jobs.\n      var trimmed_jobs = $.map(\n        jobs, function(job) {\n          return {\n            categories: job.categories,\n            createdAt: job.createdAt,\n            id: job.id,\n            text: job.text,\n          };\n        }\n      );\n\n      // append 'state' of filters to #jobCache.\n      $jobCache.val(\n        JSON.stringify(\n          {\n            'page': page,\n            'load_more': $load_more.hasClass( 'hidden' ),\n            'jobs': trimmed_jobs,\n            'checked_sidebar': $( ':checked' ).map(\n              function(i, e) {\n                return e.id;\n              }\n            ).toArray(),\n          'scrollTop': $( 'html,body' ).scrollTop(),\n          }\n        )\n      );\n    }\n\n    // Job listing template.\n    function job_list_tmpl(job, i) {\n\n      // localized career path, or default to eng 'careers'.\n      var careers_path = 'careers';\n\n      var job_html =\n        '<article id=\"post-' + (job.id || '') + '\" class=\"filter-listing__item\">' +\n        '  <a href=\"/' + careers_path + '/' + (job.id || '') + '/\" id=\"Careers_CurrentOpeningModule_JobListing_' + (i + 1) + '\"' +\n        '     onclick=\"' + qc.helper.onclick_job( job.text, false ) + '\"' +\n        '     target=\"_blank\">' +\n        '    <div class=\"filter-listing__item-inner\">' +\n        '      <h2 class=\"filter-listing__item-title\">' + (job.text || '') + '</h2> ' +\n        '      <span class=\"filter-listing__item-locations\">' + (job.categories.location || '') + '</span>' +\n        '    </div>' +\n        '  </a>' +\n        '</article>';\n      return job_html;\n    }\n\n    // toggle 'loading' indicators off.\n    function load_off() {\n      $( '.filter-listing__main', $this ).removeClass( 'filter-listing--loading' );\n      $load_more.removeClass( 'btn--loading' );\n    }\n\n    /*\n     * converts url hash fragment indentifier to appropriate checkmarked checkboxes\n     * example: '#department=Engineering' marks the tag\n     * <input name='department' value='Engineering'> as checked\n     * blank values are considered 'All'\n     */\n    function hash_to_checkbox() {\n\n      var hash = decodeURIComponent( window.location.hash ).match( /[^#].*/ );\n\n      if ( ! hash) {\n        $( '.check-all' ).prop( 'checked', true );\n        return false;\n      }\n\n      var hash_filters = hash[0].split( '__' );\n\n      for (var i = 0; i < hash_filters.length; i++) {\n\n        var category_value = hash_filters[i].split( '=' ),\n          category = category_value[0], //e.g.:location.\n          value = category_value[1], //e.g: new york.\n\n          $checkbox = $( '.' + category )\n          .find( '[name=\"' + category + '\"][value=\"' + value + '\"]' );\n\n        // edge case where same team exists across departments.\n        // makes sure to select the team w/ the checked department.\n        if ($checkbox.length > 1) {\n          $checkbox = $( '[value=\"' + value + '\"]', $( ':checked' ).parent() );\n        }\n\n        $checkbox.prop( 'checked', true );\n      }\n\n      return hash;\n    }\n\n    /**\n     * ===  Sidebar functions: filtering, rendering  ===\n     */\n\n    function build_sidebar(data) {\n      var jobs = $.extend( true, [], data );\n\n      for (var i = 0; i < SIDEBAR_FILTERS.length; i++) {\n        var categories = get_unique_categories( jobs, SIDEBAR_FILTERS[i] );\n        render_sidebar( SIDEBAR_FILTERS[i], categories, sidebar_tmpl, $( '.accordion__inner ul' )[i] );\n      }\n\n      render_nested_teams();\n    }\n\n    /*\n     * builds, renders, appends nested team checkboxes under the appropriate department\n     */\n    function render_nested_teams() {\n\n      // build department-team uniques hash list.\n      var dept_teams = {};\n\n      for (var i = 0; i < jobs.length; i++) {\n        var dept = jobs[i].categories['department'],\n          team = jobs[i].categories['team'];\n\n        dept_teams[dept] = dept_teams[dept] || [];\n        dept_teams[dept].push( team );\n      }\n\n      // build a list of unique teams per dept.\n      for (dept in dept_teams) {\n\n        var teams = $.unique( dept_teams[dept].sort() ),\n          $dept = $( '[value=\"' + dept + '\"]' ).parent();\n\n        // create team list.\n        $dept.append( '<ul class=\"team\"></ul>' );\n        var $team_list = $( 'ul.team', $dept );\n\n        // add 'All' checkbox translations.\n        var all_txt = 'All';\n        teams.unshift( all_txt );\n\n        // populate list elements and append.\n        var team_li = '';\n        for (var j = 0; j < teams.length; j++) {\n          team_li += team_templ( dept, teams[j], j === 0 );\n        }\n\n        $team_list.append( team_li );\n      }\n    }\n\n    /*\n     * Template for nested sidebar checkbox\n     */\n    function team_templ(dept, team, is_all) {\n      var input_value = is_all ? '' : team,\n        input_class = is_all ? 'class=\"check-all\"' : '';\n\n      var html =\n        '<li>' +\n        '  <label class=\"custom-checkbox\">' +\n        '    <input type=\"radio\" id=\"team[' + dept + '][' + team + ']\" ' +\n        '           name=\"team\" value=\"' + input_value + '\" ' + input_class + '>' +\n        '    <span class=\"custom-checkbox__indicator\"></span>' + team +\n        '  </label>' +\n        '</li>';\n\n      return html;\n    }\n\n    // get sorted uniques (all unique locations: e.g all unique teams, locations, commitments) to list in sidebar.\n    function get_unique_categories(jobs, field) {\n\n      // filter out jobs without empty filteres.\n      var filtered_jobs = [];\n      for (var i = 0; i < jobs.length; i++) {\n        if (jobs[i].categories[field] !== undefined &&\n          jobs[i].categories[field] !== '') {\n          filtered_jobs.push( jobs[i] );\n        }\n      }\n\n      // sort.\n      var sorted_jobs = filtered_jobs.sort(\n        function(a, b) {\n          a = a.categories[field];\n          b = b.categories[field];\n\n          if (a < b) {\n            return -1;\n          }\n          if (a > b) {\n            return 1;\n          }\n          return 0;\n        }\n      );\n\n      // pluck unique categories - if job not the same as before (assumes sorted list above).\n      var fields = [];\n      fields.push( sorted_jobs[0].categories[field] );\n\n      for (i = 1; i < sorted_jobs.length; i++) {\n        if (sorted_jobs[i - 1].categories[field] !== sorted_jobs[i].categories[field]) {\n          fields.push( sorted_jobs[i].categories[field] );\n        }\n      }\n\n      return fields;\n    }\n\n    // add generated sidebar html to DOM.\n    function render_sidebar(type, content, template_fn, div) {\n      var html = '';\n      for (var i = 0; i < content.length; i++) {\n        html += template_fn( type, content[i] );\n      }\n      $( div ).addClass( type ).append( html );\n    }\n\n    // individual sidebar checkbox template.\n    function sidebar_tmpl(type, content) {\n      type = type || '';\n      content = content || '';\n\n      var html =\n        '<li>' +\n        '  <label class=\"custom-checkbox\"> ' +\n        '    <input type=\"radio\" id=\"' + type + '[' + content + ']\" name=\"' + type + '\" value=\"' + content + '\">' +\n        '    <span class=\"custom-checkbox__indicator\"></span>' + content +\n        '  </label>' +\n        '</li>';\n      return html;\n    }\n\n    // returns checked sidebar filters.\n    function set_filters() {\n      var data = {};\n\n      $( ':checked', $this ).each(\n        function(i, d) {\n          var name = $( d ).prop( 'name' );\n\n          if ( ! data[name]) {\n            data[name] = [];\n          }\n\n          data[name].push( $( d ).val() );\n        }\n      );\n\n      return data;\n    }\n\n\n\n    //////\n    // Careers Job Single Page.\n    // - Having these filters present kicks off the entire build of the career job listings.\n    //////\n\n    // Loads job from lever.\n    function load_job() {\n      var id = $header_wrap.attr( 'data-jobid' );\n\n      // careers/lever/proxy is haproxy'd, passes request to api.lever.co [WEBCORE-847].\n      $.ajax(\n        {\n          type: 'GET',\n          url: 'https://www.quantcast.com/careers/lever/proxy/' + encodeURIComponent( id ),\n          dataType: 'json',\n          success: function(data) {\n\n            build_job( data );\n            console.log( data );\n\n            $content.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n            $social_shares.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n          },\n          error: function() {\n            console.log( 'error' );\n            $loading_error.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n          },\n        }\n      );\n    }\n\n    // Populate page with job data.\n    function build_job(job) {\n\n      // Html page title.\n      $( 'title' ).text( (job.text || '') + ' - ' + (job.categories.location || '') + ' | Quantcast' );\n\n      // main header: title, location, commitment.\n      $header_wrap.append( render_job_header( job ) );\n\n      // description & list content (requirements, responsibilties).\n      $content.prepend( render_job_lists( job ) );\n\n      // update apply button attributes with lever job data.\n      apply_job_link( job );\n\n      // update social share links w/ lever job data.\n      replace_social_shares( job );\n    }\n\n    // renders job header template.\n    function render_job_header(job) {\n      var html = '';\n      html += '<h1 class=\"single__title job-title\">' + (job.text || '') + '</h1>';\n\n      if (job.categories) {\n        html += '<div class=\"single__meta job-commitment\">' + (job.categories.commitment || '') + '</div>';\n        html += '<div class=\"single__meta job-location\">' + (job.categories.location || '') + '</div>';\n        html += '<div class=\"single__meta job-team\">' + (job.categories.team || '') + '</div>';\n      }\n\n      return html;\n    }\n\n    // render job content html.\n    function render_job_lists(job) {\n\n      var html = '<div class=\"job-description\">' + (job.description || '') + '</div>';\n\n      $( job.lists ).each(\n        function(i, job_list) {\n          html += '<div class=\"job-listing single__listing\">';\n          html += '<div class=\"job-listing-header single__listing__header\">' + (job_list.text || '') + '</div>';\n          html += '<ul class=\"job-listing-list\">' + (job_list.content || '') + '</ul>';\n          html += '</div>';\n        }\n      );\n\n      html += '<div class=\"job-additional\">' + (job.additional || '') + '</div>';\n\n      return html;\n    }\n\n    // augment apply job link with url and analytics onclick behavior.\n    function apply_job_link(job) {\n      $apply_link.attr( 'href', job.applyUrl );\n      $apply_link.attr( 'onclick', qc.helper.onclick_job( job.text, true ) );\n    }\n\n    // social share updates for ajax: twitter, linkedin: add title content in share url.\n    function replace_social_shares(job) {\n      replace_attr_text( $social_twitter, 'href', '?status=', job.text );\n      replace_attr_text( $social_linkedin, 'href', '&title=', job.text );\n    }\n\n    function replace_attr_text($div, attr, url_param, text) {\n      var uri = $div.attr( attr ).replace( url_param, url_param + text );\n      $div.attr( attr, uri );\n    }\n\n    if ( $( '[data-behavior=\"single_job\"]' ).length ) {\n      /**\n       * ---\n       *\n       * single_job.js\n       *\n       * Notes:\n       *\n       *\n       * Renders a single job view from Lever: /careers/{job-id}\n       * ---\n       */\n      //var $this = $( '[data-behavior=\"single_job\"]' );\n      var $header_wrap = $( '.job-header-wrap' ),\n          $content = $( '.single__content' ),\n          $apply_link = $( '#Job_Apply_Button' ),\n          $social_shares = $( '.social-shares-wrap' ),\n          $social_twitter = $( '.single__social-twitter' ),\n          $social_linkedin = $( '.single__social-linkedin' );\n      $loading_error = $( '.job-loading-error' )\n\n      // Entry point.\n      load_job();\n    }\n  },\n\n  finalize: function finalize() {\n    // JavaScript to be fired on the home page, after the init JS\n  },\n};\n",{"version":3,"file":"/app/web/wp-content/themes/quantcast/resources/assets/scripts/routes/careers.js","sources":["resources/assets/scripts/routes/careers.js"],"sourcesContent":["/**\n * Job listing specific js.  This js relies on the lever api routes proxied to\n * quantcast.com routes such as https://www.quantcast.com/careers/lever/proxy/filter\n * via haproxy https://github.corp.qc/qc/haproxy-docker/blob/5ab9f6519299cac19028d6d87089fdfbf9ee3b5b/qc/haproxy15/etc/haproxy.cfg\n */\nexport default {\n  init() {\n\n    var qc = {};\n    qc.behavior = {};\n    qc.helper = {};\n\n    /**\n     * ---\n     *\n     * helper_jobs.js\n     *\n     * Notes:\n     * Helper functions shared between job javascripts [filter_jobs.js, single_job.js]\n     */\n\n    /*\n     * Generates onclick '_qevents' js\n     * Used in job anchor link clicks\n     */\n    qc.helper.onclick_job = function(job_title, is_applying) {\n\n      window._qevents = window._qevents || []; // object might be ad-blocked.\n\n      return '_qevents.push({qacct:\"p-9fYuixa7g_Hm2\",labels:\"' +\n        qc.helper.parse_job_title( job_title, is_applying ) +\n        '\", event:\"click\"})';\n    }\n\n    /*\n     * Parses the job title to an acceptable label format\n     * e.g., Modeling Scientist, Performance Targeting --> Performance_Targeting.Modeling_Scientist\n     */\n    qc.helper.parse_job_title = function(job, is_applying) {\n\n      var raw_pos = job.substring( 0, job.indexOf( ',' ) ).trim();\n      var raw_team = job.substring( job.indexOf( ',' ) + 1 ).trim();\n      var pos = raw_pos.replace( ' ', '_' );\n      var team = raw_team.replace( ' ', '_' );\n\n      if (team.length == 0) {\n        team = 'NO_TEAM';\n      }\n\n      var description = team + '.' + pos;\n\n      if (is_applying) {\n        description = 'Career.APPLY.' + description;\n      } else {\n        description = 'Career.VIEW.' + description;\n      }\n\n      return description;\n    }\n\n    //////\n    // Careers Job Listing Page Filters.\n    // - Having these filters present kicks off the entire build of the career job listings.\n    //////\n    if ( $( '[data-behavior=\"filter_jobs\"]' ).length ) {\n\n      var $this = $( '[data-behavior=\"filter_jobs\"]' );\n      var SIDEBAR_FILTERS = ['department', 'location', 'commitment']; // ordered sidebar listing\n      var LIMIT = 30; // number of jobs per page\n\n      var $filters = $( '.filter-listing__sidebar', $this ),\n      $container = $( '.filter-listing__list', $this ),\n      $load_more = $( '.filter-listing__load-more', $this ),\n      form_data = {\n        page: 1,\n      },\n      $no_results = $( '.filter-listing__error.no-results', $this ),\n      $loading_error = $( '.job-loading-error', $this ),\n      $current_openings = $( 'a[name=\"current_openings\"]' ),\n      $jobCache = $( '#jobCache', $this );\n      //$accordion_inner = $( '.accordion__inner', $this ),\n\n      var jobs = [],\n      max_num_pages = 0,\n      jContent = {};\n\n      /*\n      * Entry point\n      * if jobCache is blank, first-time visit, so load initial\n      * otherwise visitor has returned from the back button, so regenerate state from jobCache\n      */\n      if ($jobCache.val() === '') {\n        init_jobs();\n      } else {\n        jContent = JSON.parse( $jobCache.val() );\n        jobs = jContent.jobs;\n\n        build_sidebar( jobs );\n\n        // set checked sidebar elements.\n        $( jContent.checked_sidebar ).each(\n          function(i, e) {\n            $( '[id=\"' + e + '\"]' ).prop( 'checked', true );\n          }\n        );\n\n        // overwrite with cached job data.\n        form_data = {\n          page: jContent.page || 1,\n          filters: set_filters(),\n        };\n\n        get_posts( form_data, false );\n\n        jContent.load_more ? $load_more.addClass( 'hidden' ) : $load_more.removeClass( 'hidden' );\n\n        $( 'html,body' ).scrollTop( jContent.scrollTop );\n\n        init_listeners();\n      }\n    }\n\n    // initial Lever API job request.\n    function init_jobs() {\n      // careers/lever/proxy is haproxy'd, passes request to api.lever.co [WEBCORE-847].\n      $.ajax({\n        type: 'GET',\n        url: 'https://www.quantcast.com/careers/lever/proxy/filter',\n        dataType: 'json',\n        success: function(data) {\n\n          jobs = data;\n\n          build_sidebar( jobs );\n\n          var hash = hash_to_checkbox();\n\n          var form_data = {\n            filters: set_filters(),\n            page: 1,\n          };\n\n          get_posts( form_data, false );\n\n          init_listeners();\n\n          // jump to position of loaded jobs.\n          if (hash) {\n            $( 'html, body' ).animate(\n              {\n                scrollTop: $current_openings.offset().top,\n              }\n            );\n          }\n        },\n        error: function() {\n          load_off();\n          $load_more.addClass( 'hidden' );\n          $loading_error.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n        },\n      });\n    }\n\n    // initialize click handlers.\n    function init_listeners() {\n\n      // job listing click: save job data and scroll position.\n      $( document ).on(\n        'click', '.filter-listing__item, .filter-listing__item-inner', function() {\n          update_jobCache( form_data.page );\n        }\n      );\n\n      // 'load more' jobs button click.\n      $load_more.on(\n        'click', function(e) {\n\n          form_data.filters = set_filters();\n          form_data.page++;\n\n          $load_more.addClass( 'btn--loading' );\n\n          get_posts( form_data, true );\n\n          e.preventDefault();\n\n        }\n      );\n\n      // on hash change url (e.g. back button, checkbox click).\n      $( window ).on(\n        'hashchange', function() {\n\n          var hash = hash_to_checkbox(),\n          form_data = {\n            filters: set_filters(),\n            page: 1,\n          };\n\n          get_posts( form_data, false );\n\n          if (hash) {\n            $( 'html, body' )\n            .animate(\n              {\n                scrollTop: $current_openings.offset().top,\n              }\n            );\n          }\n\n        }\n      );\n\n      // sidebar click.\n      $( ':input', $filters ).on(\n        'change', function(e) {\n\n          var $input = $( this ),\n          $team_all = $( 'ul.team .check-all' );\n\n          // On 'Department' checkbox click, make sure to reset 'Team' checkboxes.\n          if ($input.attr( 'name' ) === 'department') {\n            $( $team_all, $( ':checked' ).parent() ).prop( 'checked', true );\n          }\n\n          // update hash w/ filters: 'department=filter1__team=filter2__...' pattern.\n          var checked_filters = $( ':checked' ).map(\n            function(i, e) {\n              return e.getAttribute( 'name' ) + '=' + e.getAttribute( 'value' );\n            }\n          );\n\n          // triggers get_posts() via hashchange listener.\n          window.location.hash = encodeURIComponent( $.makeArray( checked_filters ).join( '__' ) );\n\n          e.preventDefault();\n        }\n      );\n\n    }\n\n    /*\n     * Get (filtered) job posts from internal list ('var jobs'), and append (or not) to DOM accordingly\n     * If appending: clicked 'load-more' button, get jobs from defined filter, page by page\n     * Otherwise: clicked sidebar click, fresh page visit -> it's a new result set, and page is 1\n     * Lastly, generating from back button (cache) -> generates a range (page 1 to page n)\n     */\n\n    function get_posts(filter_data, append) {\n\n      // filter by selected sidebar filters.\n      var filtered_jobs = filter_jobs( jobs, filter_data );\n\n      // sort by most recent date.\n      filtered_jobs = filtered_jobs.sort(\n        function(a, b) {\n          return b.createdAt - a.createdAt;\n        }\n      );\n\n      var html = '';\n\n      if (append) {\n        html = build_job_list_html( filtered_jobs, filter_data );\n      } else {\n        for (var i = 1; i <= filter_data.page; i++) {\n          html += build_job_list_html(\n            filtered_jobs, {\n              page: i,\n            }\n          );\n        }\n      }\n\n      update_view( html, filter_data.page, append, filtered_jobs.length );\n\n      update_jobCache( filter_data.page );\n\n      load_off();\n    }\n\n    // Get a page of job results (e.g. 10 jobs a page, and page = 2 -> returns jobs 20-30 in 'all jobs' list).\n    function build_job_list_html(data, filter_data) {\n\n      // paginate counted (num && position in jobs array)\n      var html = '';\n      var page = filter_data.page;\n\n      for (var i = 0; i < LIMIT && (LIMIT * (page - 1) + i) < data.length; i++) {\n        html += job_list_tmpl( data[LIMIT * (page - 1) + i], i );\n      }\n      return html;\n    }\n\n    /*\n     * Filters all jobs according to filtered checkbox criteria\n     * for every job, for each filter group...\n     * if the selected filter neither matches that job's categorization, nor 'ALL' is not checked for that category ->\n     * do not add this job to the filtered list\n     */\n\n    function filter_jobs(data, filter_data) {\n      var filtered_jobs = [];\n\n      for (var i = 0; i < data.length; i++) {\n\n        var add = true;\n        for (var key in filter_data.filters) {\n          if ( ! ((filter_data.filters[key][0] === data[i].categories[key]) ||\n              (filter_data.filters[key][0] === ''))) {\n            add = false;\n          }\n        }\n\n        if (add) {\n          filtered_jobs.push( data[i] );\n        }\n      }\n\n      return filtered_jobs;\n    }\n\n    // appends filtered content to DOM, calculates pagination and toggles buttons accordingly.\n    function update_view(html, page, append, num_jobs) {\n\n      max_num_pages = Math.ceil( num_jobs / LIMIT );\n\n      if (html) {\n        $load_more.removeClass( 'hidden' );\n        $no_results.addClass( 'hidden' );\n\n        if (append === true) {\n          $container.append( html );\n        } else {\n          $container.html( html );\n        }\n\n      } else {\n        $load_more.addClass( 'hidden' );\n        $container.empty();\n        $no_results.removeClass( 'hidden' );\n      }\n\n      if (page < max_num_pages) {\n        $load_more.removeClass( 'hidden' );\n      } else {\n        $load_more.addClass( 'hidden' );\n      }\n\n      // show selected teams, hide the rest.\n      var $selected_team = $( '[name=\"department\"]:checked' ).siblings( '.team' );\n\n      $( '.team' ).not( $selected_team ).hide( 'fast' );\n\n      if ( ! $( 'input', $selected_team ).is( ':checked' )) {\n        $( '.check-all', $selected_team ).prop( 'checked', true );\n      }\n\n      $selected_team.show( 'fast' );\n    }\n\n    /*\n     * appends filtered job 'state' to #jobCache hidden input field to return to same\n     * state when clicking back button\n     */\n    function update_jobCache(page) {\n\n      // save only needed fields to DOM for filtering jobs.\n      var trimmed_jobs = $.map(\n        jobs, function(job) {\n          return {\n            categories: job.categories,\n            createdAt: job.createdAt,\n            id: job.id,\n            text: job.text,\n          };\n        }\n      );\n\n      // append 'state' of filters to #jobCache.\n      $jobCache.val(\n        JSON.stringify(\n          {\n            'page': page,\n            'load_more': $load_more.hasClass( 'hidden' ),\n            'jobs': trimmed_jobs,\n            'checked_sidebar': $( ':checked' ).map(\n              function(i, e) {\n                return e.id;\n              }\n            ).toArray(),\n          'scrollTop': $( 'html,body' ).scrollTop(),\n          }\n        )\n      );\n    }\n\n    // Job listing template.\n    function job_list_tmpl(job, i) {\n\n      // localized career path, or default to eng 'careers'.\n      var careers_path = 'careers';\n\n      var job_html =\n        '<article id=\"post-' + (job.id || '') + '\" class=\"filter-listing__item\">' +\n        '  <a href=\"/' + careers_path + '/' + (job.id || '') + '/\" id=\"Careers_CurrentOpeningModule_JobListing_' + (i + 1) + '\"' +\n        '     onclick=\"' + qc.helper.onclick_job( job.text, false ) + '\"' +\n        '     target=\"_blank\">' +\n        '    <div class=\"filter-listing__item-inner\">' +\n        '      <h2 class=\"filter-listing__item-title\">' + (job.text || '') + '</h2> ' +\n        '      <span class=\"filter-listing__item-locations\">' + (job.categories.location || '') + '</span>' +\n        '    </div>' +\n        '  </a>' +\n        '</article>';\n      return job_html;\n    }\n\n    // toggle 'loading' indicators off.\n    function load_off() {\n      $( '.filter-listing__main', $this ).removeClass( 'filter-listing--loading' );\n      $load_more.removeClass( 'btn--loading' );\n    }\n\n    /*\n     * converts url hash fragment indentifier to appropriate checkmarked checkboxes\n     * example: '#department=Engineering' marks the tag\n     * <input name='department' value='Engineering'> as checked\n     * blank values are considered 'All'\n     */\n    function hash_to_checkbox() {\n\n      var hash = decodeURIComponent( window.location.hash ).match( /[^#].*/ );\n\n      if ( ! hash) {\n        $( '.check-all' ).prop( 'checked', true );\n        return false;\n      }\n\n      var hash_filters = hash[0].split( '__' );\n\n      for (var i = 0; i < hash_filters.length; i++) {\n\n        var category_value = hash_filters[i].split( '=' ),\n          category = category_value[0], //e.g.:location.\n          value = category_value[1], //e.g: new york.\n\n          $checkbox = $( '.' + category )\n          .find( '[name=\"' + category + '\"][value=\"' + value + '\"]' );\n\n        // edge case where same team exists across departments.\n        // makes sure to select the team w/ the checked department.\n        if ($checkbox.length > 1) {\n          $checkbox = $( '[value=\"' + value + '\"]', $( ':checked' ).parent() );\n        }\n\n        $checkbox.prop( 'checked', true );\n      }\n\n      return hash;\n    }\n\n    /**\n     * ===  Sidebar functions: filtering, rendering  ===\n     */\n\n    function build_sidebar(data) {\n      var jobs = $.extend( true, [], data );\n\n      for (var i = 0; i < SIDEBAR_FILTERS.length; i++) {\n        var categories = get_unique_categories( jobs, SIDEBAR_FILTERS[i] );\n        render_sidebar( SIDEBAR_FILTERS[i], categories, sidebar_tmpl, $( '.accordion__inner ul' )[i] );\n      }\n\n      render_nested_teams();\n    }\n\n    /*\n     * builds, renders, appends nested team checkboxes under the appropriate department\n     */\n    function render_nested_teams() {\n\n      // build department-team uniques hash list.\n      var dept_teams = {};\n\n      for (var i = 0; i < jobs.length; i++) {\n        var dept = jobs[i].categories['department'],\n          team = jobs[i].categories['team'];\n\n        dept_teams[dept] = dept_teams[dept] || [];\n        dept_teams[dept].push( team );\n      }\n\n      // build a list of unique teams per dept.\n      for (dept in dept_teams) {\n\n        var teams = $.unique( dept_teams[dept].sort() ),\n          $dept = $( '[value=\"' + dept + '\"]' ).parent();\n\n        // create team list.\n        $dept.append( '<ul class=\"team\"></ul>' );\n        var $team_list = $( 'ul.team', $dept );\n\n        // add 'All' checkbox translations.\n        var all_txt = 'All';\n        teams.unshift( all_txt );\n\n        // populate list elements and append.\n        var team_li = '';\n        for (var j = 0; j < teams.length; j++) {\n          team_li += team_templ( dept, teams[j], j === 0 );\n        }\n\n        $team_list.append( team_li );\n      }\n    }\n\n    /*\n     * Template for nested sidebar checkbox\n     */\n    function team_templ(dept, team, is_all) {\n      var input_value = is_all ? '' : team,\n        input_class = is_all ? 'class=\"check-all\"' : '';\n\n      var html =\n        '<li>' +\n        '  <label class=\"custom-checkbox\">' +\n        '    <input type=\"radio\" id=\"team[' + dept + '][' + team + ']\" ' +\n        '           name=\"team\" value=\"' + input_value + '\" ' + input_class + '>' +\n        '    <span class=\"custom-checkbox__indicator\"></span>' + team +\n        '  </label>' +\n        '</li>';\n\n      return html;\n    }\n\n    // get sorted uniques (all unique locations: e.g all unique teams, locations, commitments) to list in sidebar.\n    function get_unique_categories(jobs, field) {\n\n      // filter out jobs without empty filteres.\n      var filtered_jobs = [];\n      for (var i = 0; i < jobs.length; i++) {\n        if (jobs[i].categories[field] !== undefined &&\n          jobs[i].categories[field] !== '') {\n          filtered_jobs.push( jobs[i] );\n        }\n      }\n\n      // sort.\n      var sorted_jobs = filtered_jobs.sort(\n        function(a, b) {\n          a = a.categories[field];\n          b = b.categories[field];\n\n          if (a < b) {\n            return -1;\n          }\n          if (a > b) {\n            return 1;\n          }\n          return 0;\n        }\n      );\n\n      // pluck unique categories - if job not the same as before (assumes sorted list above).\n      var fields = [];\n      fields.push( sorted_jobs[0].categories[field] );\n\n      for (i = 1; i < sorted_jobs.length; i++) {\n        if (sorted_jobs[i - 1].categories[field] !== sorted_jobs[i].categories[field]) {\n          fields.push( sorted_jobs[i].categories[field] );\n        }\n      }\n\n      return fields;\n    }\n\n    // add generated sidebar html to DOM.\n    function render_sidebar(type, content, template_fn, div) {\n      var html = '';\n      for (var i = 0; i < content.length; i++) {\n        html += template_fn( type, content[i] );\n      }\n      $( div ).addClass( type ).append( html );\n    }\n\n    // individual sidebar checkbox template.\n    function sidebar_tmpl(type, content) {\n      type = type || '';\n      content = content || '';\n\n      var html =\n        '<li>' +\n        '  <label class=\"custom-checkbox\"> ' +\n        '    <input type=\"radio\" id=\"' + type + '[' + content + ']\" name=\"' + type + '\" value=\"' + content + '\">' +\n        '    <span class=\"custom-checkbox__indicator\"></span>' + content +\n        '  </label>' +\n        '</li>';\n      return html;\n    }\n\n    // returns checked sidebar filters.\n    function set_filters() {\n      var data = {};\n\n      $( ':checked', $this ).each(\n        function(i, d) {\n          var name = $( d ).prop( 'name' );\n\n          if ( ! data[name]) {\n            data[name] = [];\n          }\n\n          data[name].push( $( d ).val() );\n        }\n      );\n\n      return data;\n    }\n\n\n\n    //////\n    // Careers Job Single Page.\n    // - Having these filters present kicks off the entire build of the career job listings.\n    //////\n\n    // Loads job from lever.\n    function load_job() {\n      var id = $header_wrap.attr( 'data-jobid' );\n\n      // careers/lever/proxy is haproxy'd, passes request to api.lever.co [WEBCORE-847].\n      $.ajax(\n        {\n          type: 'GET',\n          url: 'https://www.quantcast.com/careers/lever/proxy/' + encodeURIComponent( id ),\n          dataType: 'json',\n          success: function(data) {\n\n            build_job( data );\n            console.log( data );\n\n            $content.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n            $social_shares.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n          },\n          error: function() {\n            console.log( 'error' );\n            $loading_error.removeClass( 'hidden' ).attr( 'aria-hidden', false );\n          },\n        }\n      );\n    }\n\n    // Populate page with job data.\n    function build_job(job) {\n\n      // Html page title.\n      $( 'title' ).text( (job.text || '') + ' - ' + (job.categories.location || '') + ' | Quantcast' );\n\n      // main header: title, location, commitment.\n      $header_wrap.append( render_job_header( job ) );\n\n      // description & list content (requirements, responsibilties).\n      $content.prepend( render_job_lists( job ) );\n\n      // update apply button attributes with lever job data.\n      apply_job_link( job );\n\n      // update social share links w/ lever job data.\n      replace_social_shares( job );\n    }\n\n    // renders job header template.\n    function render_job_header(job) {\n      var html = '';\n      html += '<h1 class=\"single__title job-title\">' + (job.text || '') + '</h1>';\n\n      if (job.categories) {\n        html += '<div class=\"single__meta job-commitment\">' + (job.categories.commitment || '') + '</div>';\n        html += '<div class=\"single__meta job-location\">' + (job.categories.location || '') + '</div>';\n        html += '<div class=\"single__meta job-team\">' + (job.categories.team || '') + '</div>';\n      }\n\n      return html;\n    }\n\n    // render job content html.\n    function render_job_lists(job) {\n\n      var html = '<div class=\"job-description\">' + (job.description || '') + '</div>';\n\n      $( job.lists ).each(\n        function(i, job_list) {\n          html += '<div class=\"job-listing single__listing\">';\n          html += '<div class=\"job-listing-header single__listing__header\">' + (job_list.text || '') + '</div>';\n          html += '<ul class=\"job-listing-list\">' + (job_list.content || '') + '</ul>';\n          html += '</div>';\n        }\n      );\n\n      html += '<div class=\"job-additional\">' + (job.additional || '') + '</div>';\n\n      return html;\n    }\n\n    // augment apply job link with url and analytics onclick behavior.\n    function apply_job_link(job) {\n      $apply_link.attr( 'href', job.applyUrl );\n      $apply_link.attr( 'onclick', qc.helper.onclick_job( job.text, true ) );\n    }\n\n    // social share updates for ajax: twitter, linkedin: add title content in share url.\n    function replace_social_shares(job) {\n      replace_attr_text( $social_twitter, 'href', '?status=', job.text );\n      replace_attr_text( $social_linkedin, 'href', '&title=', job.text );\n    }\n\n    function replace_attr_text($div, attr, url_param, text) {\n      var uri = $div.attr( attr ).replace( url_param, url_param + text );\n      $div.attr( attr, uri );\n    }\n\n    if ( $( '[data-behavior=\"single_job\"]' ).length ) {\n      /**\n       * ---\n       *\n       * single_job.js\n       *\n       * Notes:\n       *\n       *\n       * Renders a single job view from Lever: /careers/{job-id}\n       * ---\n       */\n      //var $this = $( '[data-behavior=\"single_job\"]' );\n      var $header_wrap = $( '.job-header-wrap' ),\n          $content = $( '.single__content' ),\n          $apply_link = $( '#Job_Apply_Button' ),\n          $social_shares = $( '.social-shares-wrap' ),\n          $social_twitter = $( '.single__social-twitter' ),\n          $social_linkedin = $( '.single__social-linkedin' );\n      $loading_error = $( '.job-loading-error' )\n\n      // Entry point.\n      load_job();\n    }\n  },\n\n  finalize() {\n    // JavaScript to be fired on the home page, after the init JS\n  },\n};\n"],"names":[],"mappings":"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","sourceRoot":"/app/web/wp-content/themes/quantcast"}]}